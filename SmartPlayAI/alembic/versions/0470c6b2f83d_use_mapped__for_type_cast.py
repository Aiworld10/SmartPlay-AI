"""use mapped_ for type cast

Revision ID: 0470c6b2f83d
Revises: 2b281c3f428c
Create Date: 2025-10-25 17:18:32.702164

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0470c6b2f83d'
down_revision: Union[str, Sequence[str], None] = '2b281c3f428c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('players', 'score',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('players', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('responses', 'score',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('responses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('responses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('responses', 'score',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('players', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('players', 'score',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
